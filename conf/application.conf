include "secure"

play.http.secret.key="?3Zzaz^o3:d/8wup7Zq;OxYHUEQW1nwM6Kj1WUE[o[cn7H2UDljX]6lRs;DDDI0S"

# db connections = ((physical_core_count * 2) + effective_spindle_count)
fixedConnectionPool = 5

repository.dispatcher {
  executor = "thread-pool-executor"
  throughput = 1
  thread-pool-executor {
    fixed-pool-size = ${fixedConnectionPool}
  }
}

play.filters.enabled += "play.filters.cors.CORSFilter"

play.filters.cors {
# The path prefixes to filter.
    pathPrefixes = ["/"]

    # The allowed origins. If null, all origins are allowed.
    allowedOrigins = null

    # The allowed HTTP methods. If null, all methods are allowed
    allowedHttpMethods = null

    # The allowed HTTP headers. If null, all headers are allowed.
    allowedHttpHeaders = null

    # The exposed headers
    # exposedHeaders = []

    # Whether to support credentials
    supportsCredentials = true

    # The maximum amount of time the CORS meta data should be cached by the client
    preflightMaxAge = 1 hour

    # Whether to serve forbidden origins as non-CORS requests
    #serveForbiddenOrigins = false
    
    #exposedHeaders = ["Access-Control-Allow-Origin"]
 
  	serveForbiddenOrigins=true
}